package DataS;

// Define the Single_Link_Specific_Location class
public class Single_Link_Specific_Location {
    
    // Define the Node class
    private static class Node {
        int data;
        Node next;
    
        // Constructor to initialize a new node with given data
        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }
    
    private Node head; // Head of the linked list

    // Constructor to initialize an empty linked list
    public Single_Link_Specific_Location() {
        this.head = null;
    }

    // Method to insert a node at a specific location in the linked list
    public void insertAtLocation(int data, int position) {
        Node newNode = new Node(data); // Create a new node with the given data
        
        // If inserting at the head position
        if (position == 0) {
            newNode.next = head;
            head = newNode;
            return;
        }
        
        Node current = head;
        int currentPosition = 0;
        
        // Traverse to the node just before the position
        while (currentPosition < position - 1 && current != null) {
            current = current.next;
            currentPosition++;
        }
        
        // If position is out of bounds
        if (current == null) {
            System.out.println("Invalid position. Inserting at the end.");
            return;
        }
        
        // Insert the new node at the specified position
        newNode.next = current.next;
        current.next = newNode;
    }

    // Method to print the linked list
    public void printList() {
        Node current = head; // Start from the head node
        System.out.print("Linked List: ");
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    // Main method to test the implementation
    public static void main(String[] args) {
        Single_Link_Specific_Location list = new Single_Link_Specific_Location(); // Create an instance of Single_Link_Specific_Location
        
        // Insert nodes at specific locations
        list.insertAtLocation(1, 0); // Insert 1 at position 0 (head)
        list.insertAtLocation(2, 1); // Insert 2 at position 1
        list.insertAtLocation(3, 1); // Insert 3 at position 1
        
        // Print the linked list
        list.printList(); // Output: Linked List: 1 3 2
    }
}
